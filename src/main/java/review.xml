<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reviewns">

	<!-- 특정 회원이 작성한 모든 리뷰 -->
	<select id="memberReviewList" parameterType="Integer" resultType="review">
		select distinct r.*, m.moviename from review r, movie m where r.memberno = #{memberno} and r.movieno = m.movieno
	</select>
	
	<!-- 리뷰 등록 -->
	<insert id="insertRv" parameterType="review">
		<selectKey keyProperty="reviewno" order="BEFORE" resultType="integer">
			select nvl(max(reviewno), 0) + 1 reviewno from review
		</selectKey>
		insert into review values(#{reviewno}, #{movieno}, #{memberno}, #{content}, #{movielike}, 'N')
	</insert>
	
	<!-- 특정 영화에대한 리뷰 전체 불러오기 -->
	<select id="reviewList" parameterType="integer" resultType="review">
		select r.*, mm.nickname, mm.id from (select r.* from review r, movie m where r.movieno = m.movieno and m.movieno=#{movieno}) r, member mm where mm.memberno=r.memberno
	</select>
	
	<!-- 리뷰 삭제 -->
	<delete id="reviewDel" parameterType="integer">
		update review set del='Y' where reviewno = #{reviewno}
	</delete>
	
	<!-- 리뷰 1개 불러오기 -->
	<select id="reviewShow" parameterType="integer" resultType="review">
		select * from review where reviewno = #{reviewno}
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="reviewUpdate" parameterType="review" >
		update review set content = #{content}, movielike = #{movielike} where reviewno = #{reviewno}
	</update>
	<!-- 특정 회원의 총 리뷰 수 (페이징용)-->
	<select id="getTotal" parameterType="string" resultType="integer">
		select count(*) from review where memberno=#{memberno}
	</select>
	<!-- 리뷰리스트 페이징 -->
	<select id="memberListPage" parameterType="map" resultType="Review">
		select * from (select rowNum rn, a.* from
			( select r.*, m.moviename from review r, movie m where r.movieno=m.movieno and memberno=#{memberno}) a)
		where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 특정 영화의 리뷰 개수 -->
	<select id="totalMvRv" parameterType="integer" resultType="integer">
		select count(*) from review where movieno = #{movieno}
	</select>
	
	<!-- 리뷰 리스트 뽑아오기 -->
	<select id="rvList" parameterType="map" resultType="review">
		select * from (select rowNum rn, a.* from 
		(select r.* from review r, movie m where r.movieno=m.movieno and m.movieno=#{movieno}) a)
			where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 해당 영화 리뷰들의 평균 점수 -->
	<select id="avgScore" parameterType="integer" resultType="float">
		select avg(movielike) from review where movieno = #{movieno}
	</select>
</mapper>