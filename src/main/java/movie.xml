<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moviens">
	<!-- 홈에서 영화 검색 -->
	<select id="search" parameterType="string" resultType="movie">
		select m.* from movie m, tag t where m.movieno = t.movieno(+) and (replace(moviename, ' ', '') like '%'||replace(#{searchWord}, ' ', '')||'%' 
																	or replace(director, ' ', '') like '%'||replace(#{searchWord}, ' ', '')||'%' 
																	or genre like '%'||replace(#{searchWord}, ' ', '')||'%' 
																	or tag like '%'||replace(#{searchWord}, ' ', '')||'%')
		union select m.* from movie m, actor a where m.movieno = a.movieno and replace(actorname, ' ', '') like '%'||replace(#{searchWord}, ' ', '')||'%'
	</select>
	
	<!-- 영화 상세 정보 -->
	<select id="show" parameterType="integer" resultType="movie">
		select * from movie where movieno = #{movieno}
	</select>
	
	<!-- DB에 등록된 총 영화 갯수 -->
	<select id="getTotal" resultType="integer">
		select count(*) from movie
	</select>
	
	<!-- 영화 리스트 뽑아오기 -->
	<select id="list" parameterType="map" resultType="movie">
		select * from (select rowNum rn, a.* from (select * from movie order by movieno) a)
			where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- DB에 영화 넣기 -->
	<insert id="insert" parameterType="movie">
		<selectKey keyProperty="movieno" order="BEFORE" resultType="integer">
			select nvl(max(movieno), 0)+1 movieno from movie
		</selectKey>
		insert into movie values(#{movieno}, #{moviename}, #{story},
			#{director}, #{playtime},
			#{netflix}, #{disney}, #{coupang}, #{tving},
			#{genre}, 0, #{poster}, #{trailer})
	</insert>
	
	<!-- 영화정보 수정 -->
	<update id="update" parameterType="movie">
		update movie set moviename=#{moviename}, story=#{story}, director=#{director},
			playtime=#{playtime}, netflix=#{netflix}, disney=#{disney},
			coupang=#{coupang}, tving=#{tving}, genre=#{genre},
			<if test="poster != null and poster != ''">
				poster=#{poster},
			</if>
			trailer=#{trailer} where movieno=#{movieno}	
	</update>
	
	<!-- 조회수 TOP10 리스트 조회 -->
	<select id="hotList" resultType="movie">
		select m.*, rowNum from movie m where rowNum <![CDATA[<=]]> 10 order by mvcnt desc
	</select>
	
	<!-- 조회수 증가 -->
	<update id="readCount" parameterType="integer">
		update movie set mvcnt = mvcnt+1 where movieno = #{movieno}
	</update>
	
	<!-- 현재 영화의 장르 가져오기 -->
	<select id="mvGenre" parameterType="integer" resultType="string">
		select genre from movie where movieno = #{movieno}
	</select>
	
	<!-- 장르가 같은 영화리스트 -->
	<select id="genreList" parameterType="map" resultType="movie">
		select * from movie where genre = #{genre} and not(movieno = #{movieno})
	</select>
	
	<!-- 영화에 출연하는 영화배우리스트 -->
	<select id="actList" parameterType="integer" resultType="actor">
		select a.* from actor a, movie m where a.movieno = m.movieno and m.movieno = #{movieno}
	</select>
	
	<!-- 영화배우가 같은 영화리스트 -->
	<select id="actMvList" parameterType="integer" resultType="movie">
		select m.* from movie m, (select movieno from actor where actorname in (select distinct actorname from actor a, movie m where a.movieno=m.movieno and m.movieno = #{movieno})) mm where m.movieno = mm.movieno and not(m.movieno = #{movieno})		
	</select>
	
	<!-- 수정시 reload되면서 조회수 증가하는 것 방지 -->
<!-- 	<update id="readCount" parameterType="integer"> -->
<!-- 		update movie set mvcnt = mvcnt-1 where movieno = #{movieno} -->
<!-- 	</update> -->
</mapper>